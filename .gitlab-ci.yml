# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

image: jelastic/maven:3.9.5-openjdk-21

variables:
    RELEASE_BINARY: "please-open.it-keycloak-native-metrics-spi-${CI_COMMIT_TAG}-SNAPSHOT-jar-with-dependencies.jar"
    PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/myawesomerelease/${CI_COMMIT_TAG}/"


stages:
    - build
    - upload
    - release

upload:
    stage: upload
    image: curlimages/curl:latest
    rules:
        - if: $CI_COMMIT_TAG
    script:
        - |
            curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file target/${RELEASE_BINARY} ${PACKAGE_REGISTRY_URL}

release-job:
    stage: release
    image: registry.gitlab.com/gitlab-org/release-cli:latest
    needs:
        - job: deploy:tag
          artifacts: true
    rules:
        - if: $CI_COMMIT_TAG
    script:
        - |
            release-cli create --name "Release $CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG \
              --assets-link "{\"name\":\"${RELEASE_BINARY}\",\"url\":\"${PACKAGE_REGISTRY_URL}${RELEASE_BINARY}\"}" \


deploy:tag:
    stage: build
    only:
        - tags
    except:
        - branches
    script:
        - "mvn install -B"
    artifacts:
        paths:
            - ./target/${RELEASE_BINARY}

build-job:
    stage: build
    only:
        - branches
    except:
        - tags
    script:
        - "mvn install -B"
